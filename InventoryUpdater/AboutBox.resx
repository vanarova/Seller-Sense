<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>